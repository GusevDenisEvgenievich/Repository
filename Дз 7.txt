fun q1() {
    var q by remember{mutableStateOf("1.5")}
    var w by remember{mutableStateOf("2.6")}
    var s1 by remember{mutableStateOf(0.0)}
    var s2 by remember{mutableStateOf(0.0)}
    var proc by remember{mutableStateOf("Прибавить")} // Прибавить Вычесть Умножить Разделить
    var round by remember { mutableStateOf(false) }
    var result by remember { mutableStateOf(0.1) }
    Column {
        Row(verticalAlignment = Alignment.CenterVertically,
            horizontalArrangement = Arrangement.Center,
            modifier = Modifier
                .fillMaxWidth()){
            Text (text = "Калькулятор",
                fontSize = 30.sp)
        }
        Row(verticalAlignment = Alignment.CenterVertically,
            horizontalArrangement = Arrangement.Center,
            modifier = Modifier
                .fillMaxWidth()){
            TextField(value = q, onValueChange = {q=it})
        }
        Row(verticalAlignment = Alignment.CenterVertically,
            horizontalArrangement = Arrangement.Center,
            modifier = Modifier
                .fillMaxWidth()){
            TextField(value = w, onValueChange = {w=it})
        }
        Row(verticalAlignment = Alignment.CenterVertically,
            horizontalArrangement = Arrangement.Center,
            modifier = Modifier
                .fillMaxWidth()){
            Text (text = "Действие",
                fontSize = 30.sp)
        }
        Row(modifier = Modifier
            .fillMaxWidth()){
            Column () {
                Row(verticalAlignment = Alignment.CenterVertically,
                    modifier = Modifier){
                    RadioButton(selected = proc=="Прибавить", onClick = {proc="Прибавить"})
                    Text(text = "Прибавить")
                }
                Row(verticalAlignment = Alignment.CenterVertically,
                    modifier = Modifier){
                    RadioButton(selected = proc=="Вычесть", onClick = {proc="Вычесть"})
                    Text(text = "Вычесть")
                }
                Row(verticalAlignment = Alignment.CenterVertically,
                    modifier = Modifier){
                    RadioButton(selected = proc=="Умножить", onClick = {proc="Умножить"})
                    Text(text = "Умножить")
                }
                Row(verticalAlignment = Alignment.CenterVertically,
                    modifier = Modifier){
                    RadioButton(selected = proc=="Разделить", onClick = {proc="Разделить"})
                    Text(text = "Разделить")
                }
            }
        }
        Row(horizontalArrangement = Arrangement.Center,
            modifier = Modifier
            .fillMaxWidth()){
            Divider(thickness = 2.dp,
                color = Color.Blue,
                modifier = Modifier
                    .width(360.dp))
        }
        Row(verticalAlignment = Alignment.CenterVertically,
            horizontalArrangement = Arrangement.End,
            modifier = Modifier
                .fillMaxWidth()){
            Checkbox(checked = round==true, onCheckedChange = {round=!round})
            Text(text = "Округлить")
            Spacer(modifier = Modifier
                .size(10.dp))
        }
        Row (horizontalArrangement = Arrangement.Center,
            modifier = Modifier
                .fillMaxWidth()) {
            Button(onClick = {
                s1= (q.toDoubleOrNull()?:0) as Double
                s2= (w.toDoubleOrNull()?:0) as Double
            }) {
                Text(text = "Посчитать")
            }
        }
        if (proc=="Прибавить") result=s1+s2
        if (proc=="Вычесть") result=s1-s2
        if (proc=="Умножить") result=s1*s2
        if (proc=="Разделить") result=s1/s2
        Row (horizontalArrangement = Arrangement.Start,
            modifier = Modifier
                .fillMaxWidth()) {
            Column {
                Text(text = "Результат:",
                    fontWeight = FontWeight.Bold,
                    fontSize = 30.sp)
            }
            Spacer(modifier = Modifier
                .width(15.dp))
            Column {
                Text(text = "${if(round==true) "${"%.0f".format(result)}" else if(result==0.0) " " else "${(result)}"}",
                    fontWeight = FontWeight.Bold,
                    fontSize = 30.sp)
            }
        }
    }
}


fun q2() {
    var sliderPosition by remember{mutableStateOf(1f)}
    var number by remember { mutableStateOf(1) }
    var tea by remember { mutableStateOf(false) }
    var cofee by remember { mutableStateOf(false) }
    var milk by remember { mutableStateOf(false) }
    var sugar by remember { mutableStateOf(false) }
    var cheesecake by remember { mutableStateOf(false) }
    var price by remember { mutableStateOf(0) }
    Column {
        Row(verticalAlignment = Alignment.CenterVertically,
            horizontalArrangement = Arrangement.Center,
            modifier = Modifier
                .fillMaxWidth()){
            Text (text = "Кафе Чаширка",
                fontWeight = FontWeight.Bold,
                fontSize = 30.sp)
        }
        Text (text = "Выбрать напиток",
            fontWeight = FontWeight.Bold,
            fontSize = 20.sp)
        Row(verticalAlignment = Alignment.CenterVertically,
            modifier = Modifier
                .fillMaxWidth()){
            RadioButton(selected = tea==true, onClick = {tea=!tea})
            Text(text = "Чай")
        }
        Row(verticalAlignment = Alignment.CenterVertically,
            modifier = Modifier
                .fillMaxWidth()){
            RadioButton(selected = cofee==true, onClick = {cofee=!cofee})
            Text(text = "Кофе")
        }
        Column{
            Text(text = "Количество: ${number}",
                fontWeight = FontWeight.Bold,
                fontSize = 20.sp)
            Slider(
                value = sliderPosition,
                valueRange = 1f..10f,
                steps = 8,
                onValueChange = { sliderPosition = it }
            )
            number=sliderPosition.toInt()
        }
        Text (text = "Добавки",
            fontWeight = FontWeight.Bold,
            fontSize = 20.sp)
        Row(modifier = Modifier
            .fillMaxWidth()){
            Column () {
                Row(verticalAlignment = Alignment.CenterVertically,
                    modifier = Modifier){
                    Checkbox(checked = milk==true, onCheckedChange = {milk=!milk})
                    Text(text = "Молоко")
                }
                Row(verticalAlignment = Alignment.CenterVertically,
                    modifier = Modifier){
                    Checkbox(checked = sugar==true, onCheckedChange = {sugar=!sugar})
                    Text(text = "Сахар")
                }
                Row(verticalAlignment = Alignment.CenterVertically,
                    modifier = Modifier){
                    Checkbox(checked = cheesecake==true, onCheckedChange = {cheesecake=!cheesecake})
                    Text(text = "Чизкейк")
                }
            }
        }
        Row (horizontalArrangement = Arrangement.Center,
            modifier = Modifier
                .fillMaxWidth()) {
            Button(onClick = {
                price=0
                if(tea==true) price+=5*number
                if(cofee==true) price+=10*number
                if(milk==true) price+=5*number
                if(sugar==true) price+=3*number
                if(cheesecake==true) price+=20*number
            }) {
                Text(text = "Заказать")
            }
        }
        Row (horizontalArrangement = Arrangement.Start,
            modifier = Modifier
                .fillMaxWidth()) {
            Column {
                Text(text = "К оплате:",
                    fontWeight = FontWeight.Bold,
                    fontSize = 30.sp)
            }
            Spacer(modifier = Modifier
                .width(15.dp))
            Column {
                Text(text = "${price}",
                    fontWeight = FontWeight.Bold,
                    fontSize = 30.sp)
            }
        }
    }
}