class User(
    var number: Int,
    var name: String,
    var surname:String,
    var date: String,
)

@Preview(showBackground = true, showSystemUi = true)
@Composable
fun 1() {
    var user = listOf(User(1,"Марина","Иванова","12.10.23"),User(2,"Игорь","Верный","10.10.23"),User(3,"Надежда","Власова","02.01.23"))
    Column () {
        LazyColumn() {
            items(3){
                Spacer(modifier = Modifier
                    .height(5.dp))
                Column (horizontalAlignment = Alignment.CenterHorizontally,
                    modifier = Modifier
                        .border(1.dp, Color.Black)
                        .fillMaxWidth()) {
                    Row(horizontalArrangement = Arrangement.Center,
                        modifier = Modifier
                        .fillMaxWidth()){
                        Text(text = "Пользователь № ${user[it].number}",
                            fontWeight = FontWeight.Bold)
                    }
                    Row(horizontalArrangement = Arrangement.SpaceAround,
                        verticalAlignment = Alignment.CenterVertically,
                        modifier = Modifier
                        .fillMaxWidth()){
                        Column () {
                            Spacer(modifier = Modifier
                                .width(10.dp))
                            Text(text = "${user[it].name} ${user[it].surname}",
                                fontSize = 25.sp,
                                modifier = Modifier
                                    .width(250.dp))
                        }
                        Column () {
                            Image(painterResource(R.drawable.img_3),"",
                                modifier = Modifier
                                    .size(30.dp))
                            Spacer(modifier = Modifier
                                .width(10.dp))
                        }
                    }
                    Row(horizontalArrangement = Arrangement.Center,
                        modifier = Modifier
                        .fillMaxWidth()){
                        Text(text = "Последний раз был: ${user[it].date}")
                    }
                }
            }
        }
    }
}





class Hero(
    var type: String,
    var name: String,
    var description:String,
)

class Stats(
    var strength: Int,
    var agility: Int,
    var mind:Int,
)

@Preview(showBackground = true, showSystemUi = true)
@Composable
fun f() {
    var hero = listOf(Hero("img","Crystal Maiden", "Crystal Maiden пригодится любой команде, ведь она даёт союзникам ману и не позволяет врагам сбежать. А когда представляется случай, она может уничтожить врагов своим сокрушительным ультом."),
        Hero("img_1","Axe", "Axe рубит одного врага за другим, неизменно ступая впереди своей команды. Он вынуждает противников вступить в бой, а затем отвечает на их удары смертоносными взмахами топора. Нещадно круша ослабленных врагов, он всегда несётся вперёд."),
        Hero("img_2","Drow Ranger", "Немногим удаётся спастись от Drow Ranger. Обезмолвив врагов морозной волной, она накрывает их градом замедляющих ледяных стрел, после которого мало кто способен выжить."))
    var stats = listOf(Stats(17,16,18), Stats(19,17,13), Stats(13,19,15))
    Column () {
        LazyColumn() {
            items(3){
                Column (horizontalAlignment = Alignment.CenterHorizontally,
                    modifier = Modifier
                        .border(1.dp, Color.Black)
                        .fillMaxWidth()) {
                    Row (verticalAlignment = Alignment.Bottom,
                        modifier = Modifier
                            .height(30.dp)
                            .fillMaxWidth()){
                        Spacer(modifier = Modifier
                            .width(5.dp))
                        Image(painterResource(R.drawable.img_3),"",
                            modifier = Modifier
                                .size(20.dp))
                        Text(text = "${hero[it].name}",
                            fontWeight = FontWeight.Bold,
                            fontSize = 20.sp)
                    }
                    Row (
                        modifier = Modifier
                            .height(110.dp)
                            .fillMaxWidth()){
                        Spacer(modifier = Modifier
                            .width(5.dp))
                        Column (modifier = Modifier
                            .weight(2f)) {
                            Image(painterResource(R.drawable.img),"",
                                modifier = Modifier
                                    .fillMaxWidth()
                                    .fillMaxHeight())
                        }
                        Spacer(modifier = Modifier
                            .width(10.dp))
                        Column (modifier = Modifier
                            .weight(0.5f)) {
                            Row () {
                                Image(painterResource(R.drawable.img_3),"",
                                    modifier = Modifier
                                        .size(20.dp))
                                Spacer(modifier = Modifier
                                    .width(5.dp))
                                Text(text = "${stats[it].strength}")
                            }
                            Row () {
                                Image(painterResource(R.drawable.img_4),"",
                                    modifier = Modifier
                                        .size(20.dp))
                                Spacer(modifier = Modifier
                                    .width(5.dp))
                                Text(text = "${stats[it].agility}")
                            }
                            Row () {
                                Image(painterResource(R.drawable.img_5),"",
                                    modifier = Modifier
                                        .size(20.dp))
                                Spacer(modifier = Modifier
                                    .width(5.dp))
                                Text(text = "${stats[it].mind}")
                            }
                        }
                        Column (verticalArrangement = Arrangement.Bottom,
                            modifier = Modifier
                                .weight(1f)
                                .fillMaxHeight()) {
                            Button(onClick = {}) {
                                Text(text = "Выбрать")
                            }
                        }
                    }
                    Spacer(modifier = Modifier
                        .height(5.dp))
                    Row (verticalAlignment = Alignment.CenterVertically,
                        horizontalArrangement = Arrangement.Center,
                        modifier = Modifier
                            .fillMaxWidth()){
                        Spacer(modifier = Modifier
                            .width(5.dp))
                        Text(text = "${hero[it].description}",
                            modifier = Modifier
                                .fillMaxWidth())
                        Spacer(modifier = Modifier
                            .width(5.dp))
                    }
                    Spacer(modifier = Modifier
                        .height(5.dp))
                }
                Spacer(modifier = Modifier
                    .height(5.dp))
            }
        }
    }
}